1. Тестовые сценарии, тестовые варианты. Оформление результатов тестирования
Тестовые сценарии: высокоуровневые последовательности действий для проверки функциональности.
Тест-кейсы: детализированные инструкции с входными данными, шагами и ожидаемыми результатами.
Результаты тестирования: документируются сравнением фактических и ожидаемых результатов, фиксируются найденные дефекты и рекомендации по их устранению​
.
2. Функциональные виды тестирования. Нефункциональные виды тестирования
Функциональные тесты: проверяют соответствие требованиям (модульное, интеграционное, регрессионное, API).
Нефункциональные тесты: оценивают характеристики системы (производительность, безопасность, удобство использования, установка)​
.
3. Связанные с изменениями виды тестирования
Регрессионное тестирование: проверка, не вызвали ли изменения дефекты в других частях системы.
Retest: повторная проверка исправленных ошибок​
​
.
4. Модульное и интеграционное тестирование
Модульное: проверка отдельных компонентов в изоляции.
Интеграционное: тестирование взаимодействия модулей (инкрементное, «большой взрыв»)​
.
5. Системное и регрессионное тестирование
Системное: тестирование всей системы на соответствие требованиям.
Регрессионное: повторное тестирование для подтверждения стабильности после изменений​
.
6. Автоматизация тестирования. Процесс автоматизации. Подходы к автоматизации
Автоматизация включает выбор инструментов, создание скриптов, выполнение и анализ.
Подходы: модульное тестирование, автоматизация пользовательского интерфейса (GUI). Инструменты: Selenium, TestComplete, Katalon Studio​
.

7. Обзор продуктов для автоматизации. Оценка оттестированности проекта
Инструменты: Selenium, Cypress, Katalon Studio, LoadRunner.
Метрики: покрытие кода, сложность тестирования, степень выполнения тестов​
​
.
8. Инструментарии анализа качества программных продуктов
Используются статический анализ (SonarQube), инструменты управления тестами (TestRail) и автоматизация (Selenium, Ranorex). Метрики: покрытие кода, количество дефектов, скорость исправления​
​
.

9. Обработка исключительных ситуаций
Обработка ошибок с использованием блоков try/catch. Исключения используются для предотвращения сбоев и корректной обработки ошибок​
.

10. Методы и способы идентификации сбоев и ошибок. Выявление ошибок системных компонентов
Статический анализ, инспекции, динамическое тестирование. Методы: «чёрный ящик», «белый ящик», анализ потоков данных и управления​
.

11. Повторяемость тестирования при промышленной разработке программного обеспечения
Достигается автоматизацией, использованием CI/CD, контейнеризацией. Автоматизация сокращает время тестирования, увеличивает охват и уменьшает вероятность ошибок​
.

12. Процессный подход в управлении
Методология оптимизации и совершенствования процессов через регламентацию, KPI и систематизацию. Применим к тестированию для повышения эффективности​
.

13. Реинжиниринг бизнес-процессов в информационных системах
Радикальное переосмысление процессов для оптимизации, внедрение современных технологий. Включает анализ текущей модели, разработку новой и её внедрение​
.

14. Технологии реинжиниринга бизнес-процессов
Используются Process Mining, ERP-системы, автоматизация и аналитика данных для улучшения процессов. Примеры внедрения: МТС, Россельхозбанк, Сбер​
.

15. Функционально-стоимостной анализ (ФСА)
Метод анализа затрат и функций для оптимизации процессов. Этапы: сбор данных, анализ затрат, оптимизация. Применение: производство, услуги, финансы​
.

16. Имитационный подход к анализу бизнес-процессов
Создание виртуальных моделей для тестирования изменений без влияния на реальные операции. Подходы: дискретно-событийное, системная динамика, агентное моделирование​
.

17. Управление бизнес-процессами после реинжиниринга. Примеры реализации
Включает внедрение KPI, мониторинг изменений, автоматизацию. Примеры: улучшение клиентского сервиса, снижение затрат, повышение производительности​
​
.

18. Анализ и обеспечение обработки исключительных ситуаций
Реализация отказоустойчивых систем через мониторинг, резервные копии, автоматизацию восстановления​
.

19-25. Виды тестирования
Функциональное: проверка выполнения требований​
.
Безопасность: поиск уязвимостей​
.
Нагрузочное: проверка при ожидаемой нагрузке​
.
Стрессовое: работа в экстремальных условиях​
.
Интеграция: взаимодействие модулей​
.
Конфигурационное: работа в различных окружениях​
.
Установка: корректность процесса установки ПО​
.